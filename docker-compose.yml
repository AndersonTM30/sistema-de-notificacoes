version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: sistema-notificacoes-rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - sistema-notificacoes
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: sistema-notificacoes-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASS=${RABBITMQ_PASS}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
      - QUEUE_SUFFIX=${QUEUE_SUFFIX}
    volumes:
      - ./api/src:/app/src
      - ./api/package.json:/app/package.json
      - ./api/package-lock.json:/app/package-lock.json
      - ./api/tsconfig.json:/app/tsconfig.json
      - ./api/nest-cli.json:/app/nest-cli.json
    networks:
      - sistema-notificacoes
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    command: npm run start:dev

volumes:
  rabbitmq_data:
    driver: local

networks:
  sistema-notificacoes:
    driver: bridge